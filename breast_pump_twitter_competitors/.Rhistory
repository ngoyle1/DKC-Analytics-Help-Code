View(to_deck_Twitter_page)
subset_twitter
set.seed(1)
subset_twitter <- sort(sample(nrow(to_deck_Twitter_page), size = nrow(to_deck_fb_page)))
to_deck_Twitter_page <- filter(to_deck_Twitter_page, row.names(to_deck_Twitter_page) %in% subset_twitter)
View(to_deck_Twitter_page)
to_deck_Twitter_page <- select(k, created,time, total_engagement, engagement_pct)
subset_twitter <- sort(sample(nrow(to_deck_Twitter_page),125))
set.seed(1)
subset_twitter <- sort(sample(nrow(to_deck_Twitter_page),125))
to_deck_Twitter_page <- filter(to_deck_Twitter_page, row.names(to_deck_Twitter_page) %in% subset_twitter)
View(to_deck_Twitter_page)
to_deck_Twitter_page <- arrange(to_deck_Twitter_page, time)
to_deck_Twitter_page$time <- c(1:nrow(to_deck_Twitter_page))
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_line(color = "blue") + theme_bw()
first + geom_line(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), color = "green")
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_area(color = "blue") + theme_bw()
first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), color = "green")
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_area(fill = "blue") + theme_bw()
first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), fill = "green")
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_area(fill = "blue", alpha = 0.2) + theme_bw()
first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), fill = "green")
first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), fill = "green", alpha = 0.5)
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_area(fill = "blue", alpha = 1) + theme_bw()
first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), fill = "green", alpha = 0.5)
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_line(fill = "blue", alpha = 1) + theme_bw()
first + geom_line(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), fill = "green", alpha = 0.5) + labs(x = "Time", y = "Engagement as %of the Total Audience", title = "Audience Engagement Comparison Facebook and twitter")
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_area(fill = "blue", alpha = 1) + theme_bw()
first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), fill = "green", alpha = 0.5) + labs(x = "Time", y = "Engagement as %of the Total Audience", title = "Audience Engagement Comparison Facebook and twitter")
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_area(fill = "black", alpha = 1) + theme_bw()
first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), fill = "green", alpha = 0.5) + labs(x = "Time", y = "Engagement as %of the Total Audience", title = "Audience Engagement Comparison Facebook and twitter")
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_line(color = "blue", alpha = 1) + theme_bw()
first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), color = "green", alpha = 0.5) + labs(x = "Time", y = "Engagement as %of the Total Audience", title = "Audience Engagement Comparison Facebook and twitter")
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_line(color = "blue", alpha = 1) + theme_bw()
first + geom_line(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), color = "green", alpha = 1) + labs(x = "Time", y = "Engagement as %of the Total Audience", title = "Audience Engagement Comparison Facebook and twitter")
second + +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
second <- first + geom_line(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), color = "green", alpha = 1) + labs(x = "Time", y = "Engagement as %of the Total Audience", title = "Audience Engagement Comparison Facebook and twitter")
second + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_line(color = "blue", alpha = 1) + theme_bw()
second <- first + geom_line(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), color = "green", alpha = 1) + labs(x = "Time", y = "Engagement as % of the Total Platform Audience", title = "Audience Engagement Comparison Facebook and twitter")
second + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
second + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + ylim(c(0.000,1))
second + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + ylim(c(0.000,0.5))
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_area(color = "blue", alpha = 1) + theme_bw()
second <- first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), color = "green", alpha = 1) + labs(x = "Time", y = "Engagement as % of the Total Platform Audience", title = "Audience Engagement Comparison Facebook and twitter")
second + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + ylim(c(0.000,0.5))
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_area(color = "blue", alpha = 0.2) + theme_bw()
second <- first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), color = "green", alpha = 0.3) + labs(x = "Time", y = "Engagement as % of the Total Platform Audience", title = "Audience Engagement Comparison Facebook and twitter")
second + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + ylim(c(0.000,0.5))
first <- ggplot(to_deck_fb_page, aes(x = time,y = engagement_pct)) + geom_area(color = "blue", fill = "blue",alpha = 0.2) + theme_bw()
second <- first + geom_area(aes(x = to_deck_Twitter_page$time, y = to_deck_Twitter_page$engagement_pct), color = "green", fill = "green",alpha = 0.3) + labs(x = "Time", y = "Engagement as % of the Total Platform Audience", title = "Audience Engagement Comparison Facebook and twitter")
second + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + ylim(c(0.000,0.5))
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/twitter_info_analysis_2.R")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/twitter_info_analysis_2.R")
library(ggplot2)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/twitter_info_analysis_2.R")
library(ggplot2)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/twitter_info_analysis_2.R")
library(ggplot2)
v <- getUser("PrincessCruises")
k <- userTimeline(v$id, n=3200, excludeReplies = TRUE)
View(k)
View(k)
k <- twListToDF(k)
View(k)
?retweets
l <- retweeters(k$id[1], n = 100)
View(l)
l
l <- retweets(k$id[1], n = 100)
View(l)
l
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweeters/ids.json?screen_name=",
as.character(k$id[1]),"&count=100","&cursor=",as.character(my_cursor), sep =""), sig)
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweeters/ids.json?screen_name=",
as.character(k$id[1]),"&count=100", sep =""), sig)
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweeters/ids.json?id=",
as.character(k$id[1]),"&count=100", sep =""), sig)
json1 <- content(get_the_json)
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweeters/ids.json?id=",
as.character(620042392041861121),"&count=100", sep =""), sig)
json1 <- content(get_the_json)
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweeters/ids.json?id=",
as.character(620042392041861121),"&count=100", sep =""), sig)
json1 <- content(get_the_json)
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweeters/ids.json?id=",
as.character(k$id[111]),"&count=100", sep =""), sig)
json1 <- content(get_the_json)
getCurRateLimitInfo()
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[11]),"&count=100","&trim_user=true", sep =""), sig)
k$id[11]
paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[11]),"&count=100","&trim_user=true", sep ="")
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[11]),".json","&count=100","&trim_user=true", sep =""), sig)
paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[11]),".json","&count=100","&trim_user=true", sep ="")
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[11]),"&count=100","&trim_user=true",".json" sep =""), sig)
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[11]),"&count=100","&trim_user=true",".json",sep =""), sig)
json1 <- content(get_the_json)
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),"&count=100","&trim_user=true",".json",sep =""), sig)
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),"&count=100",".json",sep =""), sig)
get_the_json <- get_the_json <- GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig)
json1 <- content(get_the_json)
View(json_1)
json2 <- jsonlite::fromJSON(toJSON(json1))
View(json2)
json2
json2 <- twListToDF(json2)
write.csv(json2,"/Desktop/json2.csv", row.names = FALSE)
colnames(json2)
ids <- select(id, user)
json2$user
x <- json2$user
View(x)
getCurRateLimitInfo()
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:length(id_tweet)){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweets[[i]] <- try(x)
Sys.sleep(waiting_time)
}
last_list <- ldply(list_of_retweeters.data.frame)
return(last_list)
}
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/twitter_info_analysis_2.R")
library(ggplot2)
v <- getUser("PrincessCruises")
k <- userTimeline(v$id, n=3200, excludeReplies = TRUE)
k <- twListToDF(k)
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:length(id_tweet)){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweets[[i]] <- try(x)
Sys.sleep(waiting_time)
}
last_list <- ldply(list_of_retweeters.data.frame)
return(last_list)
}
retweeters <- get_mass_retweets(k$id,7)
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:length(id_tweet)){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- try(x)
Sys.sleep(waiting_time)
}
last_list <- ldply(list_of_retweeters.data.frame)
return(last_list)
}
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:length(id_tweet)){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- try(x)
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters.data.frame)
return(last_list)
}
retweeters <- get_mass_retweets(k$id,7)
getCurRateLimitInfo()
getCurRateLimitInfo()
retweeters <- get_mass_retweets(k$id,7)
last_list <- ldply(list_of_retweeters, data.frame)
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:length(id_tweet)){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- try(x)
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters, data.frame)
return(last_list)
}
retweeters <- get_mass_retweets(k$id,7)
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:length(id_tweet)){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- try(x)
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters, data.frame)
return(list_of_retweeters)
}
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:length(id_tweet)){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- try(x)
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters, data.frame)
return(list_of_retweeters)
}
retweeters <- get_mass_retweets(k$id,7)
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:length(id_tweet)){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- try(x)
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters, data.frame)
return(list_of_retweeters)
}
retweeters <- get_mass_retweets(k$id,7)
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:3){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- try(x)
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters, data.frame)
return(list_of_retweeters)
}
retweeters <- get_mass_retweets(k$id,7)
retweeters
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:3){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[1]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- try(x)
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters, data.frame)
return(last_list)
}
retweeters <- get_mass_retweets(k$id,7)
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:3){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[i]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- x
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters, data.frame)
return(last_list)
}
retweeters <- get_mass_retweets(k$id,0)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/twitter_info_analysis_2.R")
library(ggplot2)
v <- getUser("PrincessCruises")
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:3){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[i]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- x
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters, data.frame)
return(last_list)
}
retweeters <- get_mass_retweets(k$id,0)
v <- getUser("PrincessCruises")
k <- userTimeline(v$id, n=3200, excludeReplies = TRUE)
k <- twListToDF(k)
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:3){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[i]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- x
Sys.sleep(waiting_time)
print(i)
}
last_list <- ldply(list_of_retweeters, data.frame)
return(last_list)
}
retweeters <- get_mass_retweets(k$id,0)
get_mass_retweets <- function(id_tweet, waiting_time){
library(plyr)
list_of_retweeters <- list()
for(i in 1:3){
get_the_json <- try(GET(paste("https://api.twitter.com/1.1/statuses/retweets/",
as.character(k$id[i]),".json",sep =""), sig))
json1 <- try(content(get_the_json))
json2 <- try(jsonlite::fromJSON(toJSON(json1)))
x <- try(json2$user)
list_of_retweeters[[i]] <- x
Sys.sleep(waiting_time)
print(i)
}
return(list_of_retweeters)
}
retweeters <- get_mass_retweets(k$id,0)
retweeters
f <- ldply(retweeters,data.frame)
g <- retweeters[[1]]
View(g)
as.data.frame(retweeters[1])
g <- as.data.frame(retweeters[1])
View(g)
g$url
g$id
g$id
source("/Users/harrocyranka/Desktop/code/twitter_info_analysis_3.R")
jll_1 <- get_first_followers("JLL", "-1")
jll_2 <- get_users_api_direct(jll_1,0)
source("/Users/harrocyranka/Desktop/code/script_to_load_packages.R")
jll <- follower_numbers_1(jll_2$followersCount)
View(jll_1)
jll <- get_counts_as_df(follower_numbers_1(jll_2$followersCount))
View(jll)
a <- getUser("JLL")
a$followersCount
##Cushman Wakefield
cw <- get_first_followers("CushWake","-1")
cw_2 <- get_users_api_direct(cw,0)
cw_3 <- get_counts_as_df(follower_numbers_1(cw_2$followersCount))
View(cw_3)
b <- getUser("CushWake")
b$followersCount
##Colliers
cl <- get_first_followers("Colliers","-1")
cl_2 <- get_users_api_direct(cl,0)
cl_3 <- get_counts_as_df(follower_numbers_1(cl_2$followersCount))
View(cl_3)
c <- getUser("Colliers")
c$followersCount
##CBRE
cbre <- get_first_followers("CBRE","-1")
cbre_2 <- get_users_api_direct(cbre,0)
cbre_3 <- get_counts_as_df(follower_numbers_1(cbre_2$followersCount))
View(cbre_3)
d <- getUser("CBRE")
d$followersCount
source("/Users/harrocyranka/Desktop/code/script_to_load_packages.R")
source("/Users/harrocyranka/Desktop/code/twitter_info_analysis_3.R")
searchTwitter("Anti-Defamation League")
searchTwitter("Jewish American Society for Historic Preservation ")
##Naya Health#
naya_1 <- getUser("nayahealthco")
naya_2 <- naya_1$getFollowerIDs()
View(naya_2)
naya_2 <- as.data.frame(naya_1$getFollowerIDs())
View(naya_2)
View(get_users_api_direct)
colnames(naya_2) <- "ids"
naya_3 <- get_users_api_direct(naya_2,0)
View(naya_3)
##Babyation#
baby_1 <- getUser("Babyation")
baby_2 <- as.data.frame(baby_1$getFollowerIDs())
baby_3 <- get_users_api_direct(baby_2,0)
colnames(baby_2) <- "ids"
baby_3 <- get_users_api_direct(baby_2,0)
##Johnson's Baby
jj_1 <- getUser("johnsonbaby")
jj_2 <- as.data.frame(jj_1$getFollowerIDs())
jj_1 <- getUser("johnsonbaby")
jj_2 <- as.data.frame(jj_1$getFollowerIDs())
jj_1 <- getUser("johnsonsbaby")
jj_2 <- as.data.frame(jj_1$getFollowerIDs())
getCurRateLimitInfo()
colnames(jj_2) <- "ids"
jj_3 <- get_users_api_direct(jj_2,0)
gerber <- getUser("GerberLife")
gerber_2 <- as.data.frame(gerber$getFollowerIDs())
colnames(gerber_2) <- "ids"
gerber_3 <- get_users_api_direct(gerber_2, 0)
##Medela
medela <- getUser("Medela_US")
medela_2 <- as.data.frame(medela$getFollowerIDs())
colnames(medela_2) <- "ids"
medela_3 <- get_users_api_direct(medela_2,0)
View(naya_3)
get_counts_as_df(follower_numbers_2(naya_3$followersCount))
get_counts_as_df(follower_numbers_1(naya_3$followersCount))
get_counts_as_df(follower_numbers_1(baby_3$followersCount))
get_counts_as_df(follower_numbers_1(jj_3$followersCount))
get_counts_as_df(follower_numbers_1(gerber_3$followersCount))
get_counts_as_df(follower_numbers_1(medela_3$followersCount))
##Honest Company Attempt
honest <- get_first_followers("Honest", "-1")
View(honest)
honest_2 <- get_users_api_direct(honest, 0)
get_counts_as_df(follower_numbers_1(honest_2$followersCount))
honest_estimate <- get_counts_as_df(follower_numbers_1(honest_2$followersCount))
write.xlsx(honest_estimate, "honest_estimate.xlsx", row.names = FALSE)
honest_2$followersCount
hn <- getUser("Honest")
hn$followersCount
#write.xlsx(honest_estimate, "honest_estimate.xlsx", row.names = FALSE)
dir.create("Desktop/breast_pump_twitter_competitors")
setwd("Desktop/breast_pump_twitter_competitors/")
write.csv(baby_3, "babyation_twitter.csv", row.names = FALSE)
write.csv(gerber_3, "gerber_twitter.csv", row.names = FALSE)
write.csv(baby_3, "babyation_twitter.csv", row.names = FALSE)
write.csv(gerber_3, "gerber_twitter.csv", row.names = FALSE)
write.csv(honest_2,"honest_company_twitter.csv", row.names = FALSE)
write.csv(jj_3, "johson_and_johnson_baby.csv", row.names = FALSE)
write.csv(medela_3, "medela_twitter.csv", row.names = FALSE)
write.csv(naya_3, "naya_health.csv", row.names = FALSE)
