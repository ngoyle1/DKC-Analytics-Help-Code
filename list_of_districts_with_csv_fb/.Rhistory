bri <- get_users_api_direct(x_ids, 0)
get_counts_as_df(follower_numbers_1(bri$followersCount))
##Civics Renewal
x <- getUser("CivicsRenewal")
x_ids <- as.data.frame(x$getFollowerIDs())
print(get_counts_as_df(follower_numbers_1(bri$followersCount)))
##Function to Speed This Up
easy_function <- function(twitter_account, my_wait_time){
x <- getUser(twitter_account)
x_ids <- as.data.frame(x$getFollowerIDs())
colnames(x_ids) <- "ids"
bri <- get_users_api_direct(x_ids, my_wait_time)
print(get_counts_as_df(follower_numbers_1(bri$followersCount)))
}
easy_function("CivicsRenewal",0)
easy_function("CivicYouth",0)
easy_function("civicedproject",0)
easy_function("CivicEducation",0)
easy_function("CloseUp_DC",0)
easy_function("CivicEdNow",0)
easy_function("icivics",0)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
View("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
install.packages("fbRads")
install.packages("fbRads")
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
install.packages("httr")
install.packages("httr")
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
library(devtools)
install_version("httr", version = "1.1.0", repos = "http://cran.us.r-project.org")
library(httr)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions_new.R")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
?fbad_get_search
f <- fbad_get_search(q = "Mayor")
View(f)
View(fb_ad_age)
View(fb_ad_age)
install.packages("fbRads")
install.packages("fbRads")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
install.packages("httr")
install.packages("httr")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
f <- fbad_get_search(q = "Mayor")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
libraru(fbRads)
library(fbRads)
oauth_endpoints("facebook")
app <- oauth_app('querying_ads_attempt', '1045624065519288', 'ff93f7d28d956c381a7b61b0149fe41a')
fb_token <- oauth2.0_token(oauth_endpoints("facebook"), app,
scope = c("ads_management", "read_insights"),
type  = "application/x-www-form-urlencoded",
cache = FALSE)
app <- oauth_app('querying_ads_attempt', '1045624065519288', 'ff93f7d28d956c381a7b61b0149fe41a')
fb_token <- oauth2.0_token(oauth_endpoints("facebook"), app,
scope = c("ads_management", "read_insights"),
type  = "application/x-www-form-urlencoded",
cache = FALSE)
install_version("httr", version = "1.1.0", repos = "http://cran.us.r-project.org")
library(devtools)
install_version("httr", version = "1.1.0", repos = "http://cran.us.r-project.org")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
View(fb_ad_age())
View(fb_ad_age)
states <- read.csv("/Users/harrocyranka/Desktop/code/facebook_api_marketing/state_codes_for_fb_ads.csv")
states_vector <- NULL
for(i in 1:nrow(states)){
states_vector[i] <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(regions =data.frame(key = as.character(states$key[i]))),
flexible_spec = list(list(
interests = data.frame(
id = as.character(id_vector),
name = as.character(name_vector)
)
))
))$users
print(paste(states$name[i], " Retrieved", " for ", name_vector,sep = ""))
Sys.sleep(3)
}
states <- read.csv("/Users/harrocyranka/Desktop/code/facebook_api_marketing/state_codes_for_fb_ads.csv")
states_vector <- NULL
for(i in 1:nrow(states)){
states_vector[i] <- fbad_reachestimate(targeting_spec = list(
geo_locations = list(regions =data.frame(key = as.character(states$key[i]))),
flexible_spec = list(list(
interests = data.frame(
id = as.character(id_vector),
name = as.character(name_vector)
)
))
))$users
print(paste(states$name[i], " Retrieved", " for ", name_vector,sep = ""))
Sys.sleep(3)
}
fbad_get_search(q = "Pokemon", type ="adinterest")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
fbad_get_search(q = "Pokemon", type ="adinterest")
View(fb_ad_age())
View(fb_ad_age)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
fbad_get_search(q = "Pokemon", type ="adinterest")
fbad_get_search(q = "Mayor", type = "work_positions")
tkn
fbad_init(accountid = "319640814", token = tkn, version = '2.7')
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.Ra")
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions.R")
View(fb_ad_race)
fbad_get_search(q = "Seattle", type = "adgeolocation")
ethnic_groups <- read_excel("/Users/harrocyranka/Desktop/code/facebook_api_marketing/race_for_fb_ads.xlsx", sheet = 1)
race_vector <- NULL
##This gets all minorities
for(i in 1:nrow(ethnic_groups)){
race_vector[i] <- fbad_reachestimate(targeting_spec = list(
age_min = unbox(16),
age_max = unbox(30)
geo_locations = list(geo_market = 'DMA:819'),
flexible_spec = list(
list(ethnic_affinity = data.frame(
id = ethnic_groups$id[i],
name = ethnic_groups$Name[i]
))
)
))$users
print(paste(ethnic_groups$Name[i], " Retrieved", " for ", name_vector,sep = ""))
Sys.sleep(3)
}
race_vector[4] <- fbad_reachestimate(targeting_spec = list(
age_min = unbox(16),
age_max = unbox(24)
geo_locations = list(geo_market = 'DMA:819'),
exclusions  = list(ethnic_affinity = data.frame(
id = as.character(ethnic_groups$id),
name = ethnic_groups$Name
))
)
)$users
print(paste("Whites retrieved for ",name_vector, sep = ""))
race_data_frame <- as.data.frame(cbind(c(ethnic_groups$Name,"Whites"),race_vector))
colnames(race_data_frame) <- c("Ethnicity", "Count")
race_data_frame$Count <- as.numeric(race_data_frame$Count)
race_data_frame$Ethnicity <- ifelse(race_data_frame$Ethnicity == "Hispanic (US - All)",
"Hispanics",ifelse(race_data_frame$Ethnicity == "African American (US)",
"Af. Americans",
ifelse(race_data_frame$Ethnicity == "Asian American (US)","Asians",
"Whites")))
return(race_data_frame)
ethnic_groups <- read_excel("/Users/harrocyranka/Desktop/code/facebook_api_marketing/race_for_fb_ads.xlsx", sheet = 1)
race_vector <- NULL
##This gets all minorities
for(i in 1:nrow(ethnic_groups)){
race_vector[i] <- fbad_reachestimate(targeting_spec = list(
age_min = unbox(16),
age_max = unbox(30),
geo_locations = list(geo_market = 'DMA:819'),
flexible_spec = list(
list(ethnic_affinity = data.frame(
id = ethnic_groups$id[i],
name = ethnic_groups$Name[i]
))
)
))$users
print(paste(ethnic_groups$Name[i], " Retrieved", " for ", name_vector,sep = ""))
Sys.sleep(3)
}
race_vector[4] <- fbad_reachestimate(targeting_spec = list(
age_min = unbox(16),
age_max = unbox(30),
geo_locations = list(geo_market = 'DMA:819'),
exclusions  = list(ethnic_affinity = data.frame(
id = as.character(ethnic_groups$id),
name = ethnic_groups$Name
))
)
)$users
print(paste("Whites retrieved for ",name_vector, sep = ""))
race_data_frame <- as.data.frame(cbind(c(ethnic_groups$Name,"Whites"),race_vector))
colnames(race_data_frame) <- c("Ethnicity", "Count")
race_data_frame$Count <- as.numeric(race_data_frame$Count)
race_data_frame$Ethnicity <- ifelse(race_data_frame$Ethnicity == "Hispanic (US - All)",
"Hispanics",ifelse(race_data_frame$Ethnicity == "African American (US)",
"Af. Americans",
ifelse(race_data_frame$Ethnicity == "Asian American (US)","Asians",
"Whites")))
return(race_data_frame)
ethnic_groups <- read_excel("/Users/harrocyranka/Desktop/code/facebook_api_marketing/race_for_fb_ads.xlsx", sheet = 1)
race_vector <- NULL
##This gets all minorities
for(i in 1:nrow(ethnic_groups)){
race_vector[i] <- fbad_reachestimate(targeting_spec = list(
age_min = unbox(16),
age_max = unbox(30),
geo_locations = list(geo_markets = 'DMA:819'),
flexible_spec = list(
list(ethnic_affinity = data.frame(
id = ethnic_groups$id[i],
name = ethnic_groups$Name[i]
))
)
))$users
print(paste(ethnic_groups$Name[i], " Retrieved", " for ", name_vector,sep = ""))
Sys.sleep(3)
}
race_vector[4] <- fbad_reachestimate(targeting_spec = list(
age_min = unbox(16),
age_max = unbox(30),
geo_locations = list(geo_markets = 'DMA:819'),
exclusions  = list(ethnic_affinity = data.frame(
id = as.character(ethnic_groups$id),
name = ethnic_groups$Name
))
)
)$users
print(paste("Whites retrieved for ",name_vector, sep = ""))
race_data_frame <- as.data.frame(cbind(c(ethnic_groups$Name,"Whites"),race_vector))
colnames(race_data_frame) <- c("Ethnicity", "Count")
race_data_frame$Count <- as.numeric(race_data_frame$Count)
race_data_frame$Ethnicity <- ifelse(race_data_frame$Ethnicity == "Hispanic (US - All)",
"Hispanics",ifelse(race_data_frame$Ethnicity == "African American (US)",
"Af. Americans",
ifelse(race_data_frame$Ethnicity == "Asian American (US)","Asians",
"Whites")))
return(race_data_frame)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source('/Users/harrocyranka/Desktop/code/twitter_info_analysis_3.R')
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/twitter_info_analysis_3.R")
x <- getUser("wwp")
x$getFollowersCount
x$getFollowersCount()
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
source("/Users/harrocyranka/Desktop/code/fb_ads_functions_march.R")
x <- fbad_get_search(q = "Pony", type = "adinterest")
View(x)
remove(list = ls())
library(tuber)
yt_oauth("581635630807-f1bqaac89ef3k2p3pjelhhl74hik2ci2.apps.googleusercontent.com",
""Ad79gQuXVYY-SioV1uoU21CO"","ssl")
yt_oauth("581635630807-f1bqaac89ef3k2p3pjelhhl74hik2ci2.apps.googleusercontent.com",
"Ad79gQuXVYY-SioV1uoU21CO","ssl")
library(tuber)
yt_oauth("581635630807-f1bqaac89ef3k2p3pjelhhl74hik2ci2.apps.googleusercontent.com",
"Ad79gQuXVYY-SioV1uoU21CO","ssl")
yt_oauth("581635630807-f1bqaac89ef3k2p3pjelhhl74hik2ci2.apps.googleusercontent.com",
"Ad79gQuXVYY-SioV1uoU21CO","ssl")
get_stats(video_id="N708P-A45D0")
yt_oauth("581635630807-f1bqaac89ef3k2p3pjelhhl74hik2ci2.apps.googleusercontent.com",
"Ad79gQuXVYY-SioV1uoU21CO","ssl","https://accounts.google.com/o/oauth2/token")
yt_oauth("581635630807-f1bqaac89ef3k2p3pjelhhl74hik2ci2.apps.googleusercontent.com",
"Ad79gQuXVYY-SioV1uoU21CO","ssl","https://accounts.google.com/o/oauth2/token")
get_stats(video_id="N708P-A45D0")
yt_oauth("581635630807-f1bqaac89ef3k2p3pjelhhl74hik2ci2.apps.googleusercontent.com",
"Ad79gQuXVYY-SioV1uoU21CO","ssl")
yt_oauth("581635630807-f1bqaac89ef3k2p3pjelhhl74hik2ci2.apps.googleusercontent.com",
"Ad79gQuXVYY-SioV1uoU21CO","ssl","http://localhost:1410/")
library(devtools)
install_version("httr", version = "1.1.0", repos = "http://cran.us.r-project.org")
library(httr)
unload("httr")
remove(list = ls())
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
library(psych)
setwd("/Users/harrocyranka/Desktop/code/list_of_districts_with_csv_fb/")
source("/Users/harrocyranka/Desktop/code/script_to_load_packages.R")
district_codes <- read_excel("/Users/harrocyranka/Desktop/code/electoral_districts_with_codes.xlsx", sheet = 1)
list_of_fixed_districts <- list()
for(i in 1:length(list.files())){
list_of_fixed_districts[[i]] <- read.csv(list.files()[i], header = TRUE)
list_of_fixed_districts[[i]]$proportion <- round(list_of_fixed_districts[[i]]$Count/sum(list_of_fixed_districts[[i]]$Count),4)
list_of_fixed_districts[[i]]$leaning <- c("Left of Center", "Left of Center","Moderate","Right of Center", "Right of Center")
list_of_fixed_districts[[i]] <- select(list_of_fixed_districts[[i]], district,Politics,leaning,proportion,Count)
print(i)
}
remove(i)
list_of_fixed_districts[[1]]
##
dF_all <- do.call("rbind",list_of_fixed_districts)
setwd("/Users/harrocyranka/Desktop/Research_and_Projects/facebook_political_map/")
##
dF_all <- sqldf("SELECT dF_all.*, district_codes.state, district_codes.district as 'congressional_district'
FROM dF_all LEFT JOIN district_codes ON dF_all.district = district_codes.fb_code")
dF_all <- select(dF_all, state, congressional_district,Politics, leaning,proportion,Count)
##Left of Center
leftCenter <- filter(dF_all, leaning == "Left of Center")
leftCenter <- sqldf("SELECT state, congressional_district, leaning, sum(proportion) as 'proportion', sum(Count) as 'count'
FROM leftCenter
GROUP BY 1,2,3")
# write.xlsx(leftCenter, "left_center_numbers.xlsx", row.names = FALSE)
##Right of Center
rightCenter <- filter(dF_all, leaning == "Right of Center")
rightCenter <- sqldf("SELECT state, congressional_district, leaning, sum(proportion) as 'proportion', sum(Count) as 'count'
FROM rightCenter
GROUP BY 1,2,3")
#ggplot(data = rightCenter, aes(x = proportion)) + geom_histogram(bins = 14)
# write.xlsx(rightCenter, "right_center_numbers.xlsx", row.names = FALSE)
#write.xlsx(as.data.frame(dF_all), "/Users/harrocyranka/Desktop/Research_and_Projects/facebook_political_map/all_Df.xlsx", row.names = FALSE)
##Moderates
moderate <- filter(dF_all, leaning == "Moderate")
moderate <- sqldf("SELECT state, congressional_district, leaning, sum(proportion) as 'proportion', sum(Count) as 'count'
FROM moderate
GROUP BY 1,2,3")
##All Together
allDistrict <- as.data.frame(cbind(leftCenter,rightCenter$proportion, moderate$proportion))
allDistrict <- select(allDistrict, state,congressional_district, proportion,`rightCenter$proportion`,`moderate$proportion`)
colnames(allDistrict) <- c("state","congressional_district","left_of_center", "right_of_center", "moderates")
allDistrict$lean <- ifelse(allDistrict$moderates > allDistrict$left_of_center & allDistrict$moderates > allDistrict$right_of_center,
"Plurality Moderate","Other")
allDistrict$lean <- ifelse(allDistrict$lean == "Other" & allDistrict$left_of_center > allDistrict$right_of_center,
"Lean Left",
ifelse(allDistrict$lean == "Other" & allDistrict$right_of_center > allDistrict$left_of_center, "Lean Right", allDistrict$lean))
allDistrict$lean <- ifelse(allDistrict$lean == "Lean Right" & allDistrict$right_of_center > 0.5, "Majority Right",
ifelse(allDistrict$lean == "Lean Left" & allDistrict$left_of_center > 0.5, "Majority Left", allDistrict$lean))
allDistrict$congressional_district <- ifelse(allDistrict$congressional_district == "00", "01", allDistrict$congressional_district)
allDistrict$left_delta <- allDistrict$left_of_center - allDistrict$right_of_center
write.xlsx(allDistrict, "allDistrictProportions.xlsx", row.names = FALSE)
##
library(gdata)
keep(allDistrict, sure = TRUE)
source("/Users/harrocyranka/Desktop/code/script_to_load_packages.R")
##
pviIndex <- read_excel("pvi_index.xlsx", sheet = 1)
pviIndex$District <- as.character(pviIndex$District)
pviIndex$District <- ifelse(nchar(pviIndex$District) == 1, paste("0",pviIndex$District,sep = ""),
pviIndex$District)
pviIndex$PVI_Adv <- ifelse(pviIndex$PVI_Party == "R",(-1)*pviIndex$PVI_Adv,pviIndex$PVI_Adv)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
library(psych)
setwd("/Users/harrocyranka/Desktop/code/list_of_districts_with_csv_fb/")
source("/Users/harrocyranka/Desktop/code/script_to_load_packages.R")
district_codes <- read_excel("/Users/harrocyranka/Desktop/code/electoral_districts_with_codes.xlsx", sheet = 1)
list_of_fixed_districts <- list()
for(i in 1:length(list.files())){
list_of_fixed_districts[[i]] <- read.csv(list.files()[i], header = TRUE)
list_of_fixed_districts[[i]]$proportion <- round(list_of_fixed_districts[[i]]$Count/sum(list_of_fixed_districts[[i]]$Count),4)
list_of_fixed_districts[[i]]$leaning <- c("Left of Center", "Left of Center","Moderate","Right of Center", "Right of Center")
list_of_fixed_districts[[i]] <- select(list_of_fixed_districts[[i]], district,Politics,leaning,proportion,Count)
print(i)
}
remove(i)
list_of_fixed_districts[[1]]
##
dF_all <- do.call("rbind",list_of_fixed_districts)
setwd("/Users/harrocyranka/Desktop/Research_and_Projects/facebook_political_map/")
##
dF_all <- sqldf("SELECT dF_all.*, district_codes.state, district_codes.district as 'congressional_district'
FROM dF_all LEFT JOIN district_codes ON dF_all.district = district_codes.fb_code")
dF_all <- select(dF_all, state, congressional_district,Politics, leaning,proportion,Count)
##Left of Center
leftCenter <- filter(dF_all, leaning == "Left of Center")
leftCenter <- sqldf("SELECT state, congressional_district, leaning, sum(proportion) as 'proportion', sum(Count) as 'count'
FROM leftCenter
GROUP BY 1,2,3")
# write.xlsx(leftCenter, "left_center_numbers.xlsx", row.names = FALSE)
##Right of Center
rightCenter <- filter(dF_all, leaning == "Right of Center")
rightCenter <- sqldf("SELECT state, congressional_district, leaning, sum(proportion) as 'proportion', sum(Count) as 'count'
FROM rightCenter
GROUP BY 1,2,3")
#ggplot(data = rightCenter, aes(x = proportion)) + geom_histogram(bins = 14)
# write.xlsx(rightCenter, "right_center_numbers.xlsx", row.names = FALSE)
#write.xlsx(as.data.frame(dF_all), "/Users/harrocyranka/Desktop/Research_and_Projects/facebook_political_map/all_Df.xlsx", row.names = FALSE)
##Moderates
moderate <- filter(dF_all, leaning == "Moderate")
moderate <- sqldf("SELECT state, congressional_district, leaning, sum(proportion) as 'proportion', sum(Count) as 'count'
FROM moderate
GROUP BY 1,2,3")
##All Together
allDistrict <- as.data.frame(cbind(leftCenter,rightCenter$proportion, moderate$proportion))
allDistrict <- select(allDistrict, state,congressional_district, proportion,`rightCenter$proportion`,`moderate$proportion`)
colnames(allDistrict) <- c("state","congressional_district","left_of_center", "right_of_center", "moderates")
allDistrict$lean <- ifelse(allDistrict$moderates > allDistrict$left_of_center & allDistrict$moderates > allDistrict$right_of_center,
"Plurality Moderate","Other")
allDistrict$lean <- ifelse(allDistrict$lean == "Other" & allDistrict$left_of_center > allDistrict$right_of_center,
"Lean Left",
ifelse(allDistrict$lean == "Other" & allDistrict$right_of_center > allDistrict$left_of_center, "Lean Right", allDistrict$lean))
allDistrict$lean <- ifelse(allDistrict$lean == "Lean Right" & allDistrict$right_of_center > 0.5, "Majority Right",
ifelse(allDistrict$lean == "Lean Left" & allDistrict$left_of_center > 0.5, "Majority Left", allDistrict$lean))
allDistrict$congressional_district <- ifelse(allDistrict$congressional_district == "00", "01", allDistrict$congressional_district)
allDistrict$left_delta <- allDistrict$left_of_center - allDistrict$right_of_center
write.xlsx(allDistrict, "allDistrictProportions.xlsx", row.names = FALSE)
##
library(gdata)
keep(allDistrict, sure = TRUE)
source("/Users/harrocyranka/Desktop/code/script_to_load_packages.R")
##
pviIndex <- read_excel("/Users/harrocyranka/Desktop/Research_and_Projects/dead_projects/facebook_political_map/pvi_index.xlsx", sheet = 1)
pviIndex$District <- as.character(pviIndex$District)
pviIndex$District <- ifelse(nchar(pviIndex$District) == 1, paste("0",pviIndex$District,sep = ""),
pviIndex$District)
pviIndex$PVI_Adv <- ifelse(pviIndex$PVI_Party == "R",(-1)*pviIndex$PVI_Adv,pviIndex$PVI_Adv)
remove(list = ls())
options(stringsAsFactors = FALSE)
options(scipen = 999)
library(psych)
setwd("/Users/harrocyranka/Desktop/code/list_of_districts_with_csv_fb/")
source("/Users/harrocyranka/Desktop/code/script_to_load_packages.R")
district_codes <- read_excel("/Users/harrocyranka/Desktop/code/electoral_districts_with_codes.xlsx", sheet = 1)
list_of_fixed_districts <- list()
for(i in 1:length(list.files())){
list_of_fixed_districts[[i]] <- read.csv(list.files()[i], header = TRUE)
list_of_fixed_districts[[i]]$proportion <- round(list_of_fixed_districts[[i]]$Count/sum(list_of_fixed_districts[[i]]$Count),4)
list_of_fixed_districts[[i]]$leaning <- c("Left of Center", "Left of Center","Moderate","Right of Center", "Right of Center")
list_of_fixed_districts[[i]] <- select(list_of_fixed_districts[[i]], district,Politics,leaning,proportion,Count)
print(i)
}
remove(i)
list_of_fixed_districts[[1]]
##
dF_all <- do.call("rbind",list_of_fixed_districts)
setwd("/Users/harrocyranka/Desktop/Research_and_Projects/facebook_political_map/")
##
dF_all <- sqldf("SELECT dF_all.*, district_codes.state, district_codes.district as 'congressional_district'
FROM dF_all LEFT JOIN district_codes ON dF_all.district = district_codes.fb_code")
dF_all <- select(dF_all, state, congressional_district,Politics, leaning,proportion,Count)
##Left of Center
leftCenter <- filter(dF_all, leaning == "Left of Center")
leftCenter <- sqldf("SELECT state, congressional_district, leaning, sum(proportion) as 'proportion', sum(Count) as 'count'
FROM leftCenter
GROUP BY 1,2,3")
# write.xlsx(leftCenter, "left_center_numbers.xlsx", row.names = FALSE)
##Right of Center
rightCenter <- filter(dF_all, leaning == "Right of Center")
rightCenter <- sqldf("SELECT state, congressional_district, leaning, sum(proportion) as 'proportion', sum(Count) as 'count'
FROM rightCenter
GROUP BY 1,2,3")
#ggplot(data = rightCenter, aes(x = proportion)) + geom_histogram(bins = 14)
# write.xlsx(rightCenter, "right_center_numbers.xlsx", row.names = FALSE)
#write.xlsx(as.data.frame(dF_all), "/Users/harrocyranka/Desktop/Research_and_Projects/facebook_political_map/all_Df.xlsx", row.names = FALSE)
##Moderates
moderate <- filter(dF_all, leaning == "Moderate")
moderate <- sqldf("SELECT state, congressional_district, leaning, sum(proportion) as 'proportion', sum(Count) as 'count'
FROM moderate
GROUP BY 1,2,3")
##All Together
allDistrict <- as.data.frame(cbind(leftCenter,rightCenter$proportion, moderate$proportion))
allDistrict <- select(allDistrict, state,congressional_district, proportion,`rightCenter$proportion`,`moderate$proportion`)
colnames(allDistrict) <- c("state","congressional_district","left_of_center", "right_of_center", "moderates")
allDistrict$lean <- ifelse(allDistrict$moderates > allDistrict$left_of_center & allDistrict$moderates > allDistrict$right_of_center,
"Plurality Moderate","Other")
allDistrict$lean <- ifelse(allDistrict$lean == "Other" & allDistrict$left_of_center > allDistrict$right_of_center,
"Lean Left",
ifelse(allDistrict$lean == "Other" & allDistrict$right_of_center > allDistrict$left_of_center, "Lean Right", allDistrict$lean))
allDistrict$lean <- ifelse(allDistrict$lean == "Lean Right" & allDistrict$right_of_center > 0.5, "Majority Right",
ifelse(allDistrict$lean == "Lean Left" & allDistrict$left_of_center > 0.5, "Majority Left", allDistrict$lean))
allDistrict$congressional_district <- ifelse(allDistrict$congressional_district == "00", "01", allDistrict$congressional_district)
allDistrict$left_delta <- allDistrict$left_of_center - allDistrict$right_of_center
write.xlsx(allDistrict, "allDistrictProportions.xlsx", row.names = FALSE)
##
library(gdata)
keep(allDistrict, sure = TRUE)
source("/Users/harrocyranka/Desktop/code/script_to_load_packages.R")
##
pviIndex <- read_excel("/Users/harrocyranka/Desktop/Research_and_Projects/dead_projects/facebook_political_map/pvi_index.xlsx", sheet = 1)
pviIndex$District <- as.character(pviIndex$District)
pviIndex$District <- ifelse(nchar(pviIndex$District) == 1, paste("0",pviIndex$District,sep = ""),
pviIndex$District)
pviIndex$PVI_Adv <- ifelse(pviIndex$PVI_Party == "R",(-1)*pviIndex$PVI_Adv,pviIndex$PVI_Adv)
##
allDistrict$pviIndex <- pviIndex$PVI_Adv
allDistrict$score <- round(log(allDistrict$left_of_center/allDistrict$right_of_center),3)
pairs.panels(allDistrict[c("score","pviIndex")])
allDistrict$incumbent <- pviIndex$Party
